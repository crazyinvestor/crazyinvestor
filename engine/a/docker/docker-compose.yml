version: '3'

volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data:Z
      - zookeeper-log:/var/lib/zookeeper/log:Z
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'
      ZOOKEEPER_ADMIN_ENABLE_SERVER: 'false'
    ports:
      - 22181:2181
    networks:
      - mybridge-network
  kafka:
    build: 
      context: ./kafka
      dockerfile: kafka-dockerfile
    volumes: 
      - kafka-data:/var/lib/kafka/data:Z
    ports:
      - 29092:29092
    links:
      - zookeeper
    networks:
      - mybridge-network
  cassandra:
    image: cassandra:3.11.14
    restart: "always"
    ports:
      - 9042:9042
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mybridge-network
    #expose: # FOR DEBUG ENVIRONMENT ONLY
    #  - "9042"
  cass_init:
    image: cassandra:3.11.14
    depends_on:
      cassandra:
        condition: service_healthy
    links:
      - cassandra
    restart: "no"
    entrypoint: ["/cassandra_init00.sh"]
    volumes:
      - ./cassandra_init00.sh:/cassandra_init00.sh
    networks:
      - mybridge-network
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - 8080:8080
    links:
      - kafka
    networks:
      - mybridge-network

networks:
  mybridge-network:
    driver: bridge

